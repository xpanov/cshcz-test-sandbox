name: Terraform build/destroy template

on:
  workflow_call

env: 
  KYPO_ENDPOINT: ""
  CI_PROJECT_ID: ${{ github.event.repository.id }}
  CI_PROJECT_URL: ${{ github.event.repository.html_url }}
  CI_COMMIT_SHORT_SHA: ${{ github.sha }}
  CI_SERVER_HOST: ${{ github.server_url }}
  CI_PROJECT_PATH: ${{ github.repository }}
  NAME: "sandbox test 1"
  TYPE: "linux"
  DISTRO: "kali"
  GUI_ACCESS: "true"
  # variable "ACCESS_TOKEN" {
  #   sensitive = true
  # }

jobs:
  terraform-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        # with:
        #   tofu_wrapper: false

      - name: Init Terraform
        run: terraform init

      - name: Vaidate Terraform
        run: terraform validate
      
      - name: Plan Terraform
        # id: plan
        run: terraform plan

      # Useless step ?
      # - name: Show outputs
      #   run: |
      #     echo ${{ steps.plan.outputs.stdout }}
      #     echo ${{ steps.plan.outputs.stderr }}
      #     echo ${{ steps.plan.outputs.exitcode }}

      - name: Apply Terraform
        run: terraform apply -auto-approve
      
      - name: Tests
        run: |
          ls -la
          ls -la .terraform/
          cat .terraform.lock.hcl
          cat terraform.tfstate
          cat test.txt
      
      - name: Wait for 1 minute
        run: sleep 60
      
      # - name: Cache Terraform
      #   uses: actions/cache@v3
      #   with:
      #     path: .terraform/
      #     key: ${{ github.ref_name }}
      
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: terraform-outputs
      #     path: outputs/

  # terraform-destroy:
  #   runs-on: ubuntu-latest
  #   # needs: terraform-build
  #   # if: failure() || cancelled()
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Setup Tofu
  #       uses: hashicorp/setup-terraform@v3
      
      - name: Destroy Tofu
        run: terraform destroy -auto-approve
      
      # - name: Delete Terraform State
      #   run: |
      #     curl --header "Private-Token:${{ secrets.TF_PASSWORD }}" --request DELETE "${{ github.api_url }}/projects/${{ github.repository }}/terraform/state/${{ github.ref_name }}" || true

 
#todo leave the container in openstack for 3 days and only then delete it and handle multiple pushes (remember the last date)
#todo cron job tp delete old packages as an option
#todo research actions that happen after 3 days after the push
#todo different terraform states depending on branches
#todo delete tf state after deletion of branch. 

#todo write a msg to Zdenek for access to openstack

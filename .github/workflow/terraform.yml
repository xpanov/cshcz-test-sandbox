name: Terraform CI

on:
  workflow_call:
    inputs:
      action:
        required: true
        type: string


jobs:
  terraform-build:
    runs-on: ubuntu-latest
    if: inputs.action == 'terraform-build'
    # container:
    #   image: registry.gitlab.com/components/opentofu/gitlab-opentofu:latest-opentofu1.6.2
    # env:
      # TF_ROOT: ${{ github.workspace }}
      # TF_STATE_NAME: ${{ github.ref_name }}
      # TF_VAR_CI_SERVER_HOST: ${{ github.server_url }}
      # TF_VAR_CI_COMMIT_SHORT_SHA: ${{ github.sha }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Tofu
      - uses: opentofu/setup-opentofu@v1
        # with:
        #   tofu_wrapper: false

      - name: Init Tofu
        run: tofu init
      
      - name: Terraform Plan
        run: tofu plan
      
      - run: echo ${{ steps.plan.outputs.stdout }}
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}

      - name: Terraform Apply
        run: tofu apply || ( echo ${{ steps.plan.outputs.stderr }} ; exit 1)
      
      # - name: Terraform Apply
      #   run: gitlab-tofu apply || (gitlab-tofu output ; exit 1)
      
      # - name: Cache Terraform
      #   uses: actions/cache@v3
      #   with:
      #     path: .terraform/
      #     key: ${{ github.ref_name }}
      
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: terraform-outputs
      #     path: outputs/
  # terraform-build:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: registry.gitlab.com/components/opentofu/gitlab-opentofu:latest-opentofu1.6.2
  #   env:
  #     TF_ROOT: ${{ github.workspace }}
  #     TF_STATE_NAME: ${{ github.ref_name }}
  #     TF_VAR_CI_SERVER_HOST: ${{ github.server_url }}
  #     TF_VAR_CI_COMMIT_SHORT_SHA: ${{ github.sha }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
      
  #     - name: Terraform Plan
  #       run: gitlab-tofu plan
      
  #     - name: Terraform Apply
  #       run: gitlab-tofu apply || (gitlab-tofu output ; exit 1)
      
  #     - name: Cache Terraform
  #       uses: actions/cache@v3
  #       with:
  #         path: .terraform/
  #         key: ${{ github.ref_name }}
      
  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: terraform-outputs
  #         path: outputs/
  
  terraform-destroy:
    if: inputs.action == 'terraform-destroy'
    runs-on: ubuntu-latest
    needs: terraform-build
    # if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Tofu
      - uses: opentofu/setup-opentofu@v1
      
      - name: Destroy Tofu
        run: tofu destroy
      
      # - name: Delete Terraform State
      #   run: |
      #     curl --header "Private-Token:${{ secrets.TF_PASSWORD }}" --request DELETE "${{ github.api_url }}/projects/${{ github.repository }}/terraform/state/${{ github.ref_name }}" || true
